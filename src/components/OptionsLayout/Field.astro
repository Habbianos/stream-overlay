---
import type { HTMLAttributes } from "astro/types";

interface Props {
	label: string;
	placeholder: string;
	info?: string;
	type: astroHTML.JSX.HTMLInputTypeAttribute;
	id: string;
	inputProps?: HTMLAttributes<"input">;
}
const { label, placeholder, info, type, id, inputProps } = Astro.props;
---

<label for={`#${id}`}>{label}</label>
<input
	type={type}
	id={id}
	title={placeholder}
	placeholder={placeholder}
	{...inputProps}
/>
<p>{info ?? <slot name="info" />}</p>

<style lang="scss">
	label {
		color: #72767d;
		font-size: 9pt;
		font-weight: bold;
		text-transform: uppercase;
		margin: 17px 0 9px;
	}

	input,
	button,
	select {
		outline: none;
		width: 100%;
		padding: 13px;
		border: solid 1px #c7c9cb;
		border-radius: 3px;
		background-color: #fbfbfb;
		box-sizing: border-box;
		font-family: inherit;
		font-size: 12pt;
		text-overflow: ellipsis;

		&:disabled {
			background-color: #fcfcfd;
			border-color: #eaeaea;
			cursor: not-allowed;
		}

		&:active,
		&:focus {
			border-color: #7289da;
		}
	}
	select {
		cursor: pointer;
	}
	:has(select + input) {
		display: flex;

		select {
			border-top-right-radius: 0;
			border-bottom-right-radius: 0;
			border-right: 0;
		}

		input {
			border-top-left-radius: 0;
			border-bottom-left-radius: 0;
		}
	}
	p {
		margin: 0;
	}
	p:not(:empty) {
		margin: 5px 0 0;
		font-size: 8pt;
		color: #b4b6b9;
	}
</style>
