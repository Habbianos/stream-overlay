---
import RootLayout from "./RootLayout.astro";

interface Props {
	widgetName: string;
	overlayUrl: string;
}

const { widgetName, overlayUrl } = Astro.props
---
<RootLayout title={`Options - ${widgetName}`}>
	<slot name="aside" />

	<main>
		<form><slot /></form>
	</main>
</RootLayout>

<script>
	function formDataToJson(f: FormData) {console.log(f)
		return Object.fromEntries(Array.from(f.keys(), k =>
			k.endsWith('[]') ? [k.slice(0, -2), f.getAll(k)] : [k, f.get(k)]));
	}
	function init() {
		const form = document.querySelector("form")!;
		form.addEventListener("submit", (evt) => {
			evt.preventDefault();
		});
		form.addEventListener("change", update);
		update();
	}
	init()
	function update() {
		const form = document.querySelector("form")!;
		const data = new FormData(form)
		console.log(formDataToJson(data))
		const query = new URLSearchParams(data).toString()
		const url = window.location.origin + window.overlayURL + "?" + query
		form.url.value = url
		form.querySelector("iframe")!.src = url
	}
</script>

<style lang="scss">
	body {
		--nav_w: 200px;
		--left_bg_color: #f3f3f3;
		--right_bg_color: #fff;
		font-family: "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans",
			"Helvetica Neue", sans-serif;
		background-image: linear-gradient(
			to right,
			var(--left_bg_color) 50%,
			var(--right_bg_color) 50%
		);
		min-height: 100vh;
		display: flex;
		padding: 0 40px;
		max-width: 1080px;
		margin: 0 auto;
	}

	main {
		padding: 40px 0 50vh 40px;
		background-color: var(--right_bg_color);
		flex: 1;
	}

</style>